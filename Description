In Cooperative caching, a requested data which is not found in the local cache can be found in any other cache of the cache group. A cache group is basically a group of caches which cooperate with each other. In such a situation, an important question which needs to be answered is whether the requested data should be copied to the local cache or not.

There could be two scenarios here. The first case is that the requested data is copied every time to the cache where the request originated. However, this will lead to uncontrolled replication of data items. This is the Ad hoc scheme. The second case is that the requested data is never copied to the requesting cache. Then there is a possibility that the data will be evicted by cache replacement policies and the cache group would not contain that data item anymore. The two cases mentioned above make the decisions of placement without the knowledge of other caches of the group. Thus, each cache is treated as an independent entity rather than a global entity. This issue here is the document placement problem in cooperative caching. There are a few schemes which deal with this problem and are evaluated in this project. 

This project proposes a modified version of the Expiration age scheme. The modified expiration age scheme would have an additional frequency factor. In order to measure the success of the proposed modified approach, its performance i.e. mean response time (Average Latency) and document hit ratio would be compared against the performances of ad hoc scheme and expiration age scheme using a discrete event simulator by using Prof. Alan Kaminskyâ€™s Parallel Java Library.
